#Makefile for my very first Verilog program using open source tools.
#USAGE: make TOP=NameOfTopModule #Builds but doesn't flash a program onto the FPGA
#       make install TOP=NameOfTopModule #Flash a program onto the FPGA.  Also builds if necessary.
#       make clean TOP=NameOfTopModule #Remove stuff generated by "make"
#TOP is required on the command line
ifndef TOP
$(error You must set TOP to the top-level module in a Verilog file named $(TOP).v.  Usage: make install TOP=BothButtons)
endif
#Things I always forget because I don't use GNU make often enough:
#Last rule is at the top of the Makefile
#"Contents" of a rule MUST use TAB, not spaces!
#$@ = LHS of rule, $^ = RHS
#There's something about % that I don't remember atm
#There's something about patsubst that I don't remember atm

#Written on FPGA Integrated Circuit
PACKAGE=vq100
#Provided by Nandland
CONSTRAINTS=$(HOME)/Program/GoBoard/Go_Board_Constraints.pcf
#CONSTRAINTS=Go_Board_Constraints.pcf

#Found with lsusb and then taking bus/device
LSUB:=$(shell lsusb | grep -i "Future Technology")
DEV:=$(word 2,$(LSUB))/$(subst :,,$(word 4,$(LSUB)))

#Just "make" should build everything up to this point but NOT
#flash the program onto the FPGA.  Use "make install" for that.

$(TOP).bin: $(TOP).asc
		icepack $^ $@

$(TOP).asc: $(TOP).json $(CONSTRAINTS)
		nextpnr-ice40 -q --hx1k --package $(PACKAGE) --freq 25 --top $(TOP) --pcf $(CONSTRAINTS) --json $(TOP).json --asc $@

#All Verilog files in this directory, *.v, are assumed to be either $(TOP).v itself
#or headers it depends on.
$(TOP).json: $(wildcard *.v)
		yosys -q -p "synth_ice40 -top $(TOP) -json $@" $(TOP).v

#Clean out the build area so that everything will be rebuilt
.PHONY: clean
clean:
		rm -rf $(TOP).json $(TOP).asc $(TOP).bin

#Flash a program onto the FPGA with "make install"
#Put install target at the bottom so that it isn't part of "make (all)".
#Remember that "make" tries to call "make all" and (apparently) defaults
#to the first target.
.PHONY: install
install: $(TOP).bin
		@echo "Flashing to USB device ${DEV}..."
		sudo iceprog -d d:${DEV} $^

